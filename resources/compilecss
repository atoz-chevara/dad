#!/usr/bin/node
/* -*- Mode: js2 -*-
 * Copyright (C) 2011  Lincoln de Sousa <lincoln@comum.org>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

var path = require('path'),
    fs = require('fs'),
    sass = require('sass'),
    cleancss = require('clean-css');


var supported_exts = [
    '.sass'
];

function compileAndMinify(file) {
    var ext = path.extname(file);
    if (ext === '.sass') {
        fs.readFile(file, function (err, data) {
            if (!err) {
                var compiled = sass.render(String(data));
                var minimized = cleancss.process(compiled);
                fs.writeFile(file.replace(ext, '.css'), minimized);
            } else {
                console.log(err);
            }
        });
    }
}


function processDir(basePath, watch) {
    fs.readdir(basePath, function (err, fileList) {
        if (err) {
            console.log(err);
        } else {
            fileList.forEach(function (file) {
                var current = path.join(basePath, file);
                if (current[0] === '.' ||
                    supported_exts.indexOf(path.extname(current)) < 0) {
                    return;
                }
                if (watch) {
                    fs.watchFile(current, function (curr, prev) {
                        compileAndMinify(current);
                    });
                } else {
                    compileAndMinify(current);
                }
            });
        };
    });
}


if (module == require.main) {
    var defaultBasePath = path.dirname(__filename);
    var defaultDirs = [
        path.join(defaultBasePath, '..', 'static', 'css'),
        path.join(defaultBasePath, '..', 'templates')
    ];

    var defaults = {
        watch: false,
        dirs: defaultDirs
    };

    process.argv.forEach(function (val, index, array) {
        if (index > 1) {
            var b = val.split('=');
            var arg = {
                name: b[0].replace(/\-*/, ''),
                value: b.length > 1 ? b[1] : null
            };

            switch (arg.name) {
            case 'watch':
            case 'w':
                defaults.watch = true;
                break;

            case 'dirs':
            case 'd':
                defaults.dirs = [];
                arg.value.split(',').forEach(function (data) {
                    defaults.dirs.push(path.resolve(data));
                });
                break;
            }
        }
    });

    defaults.dirs.forEach(function (data) {
        processDir(data, defaults.watch);
    });
}
